#!/bin/sh

set -e
cd `dirname $0`
cd ..

tempdir=$1
if [ "x$tempdir" = "x" ]; then
    tempdir=`mktemp -d`
else
    mkdir -p $tempdir
fi

if id www-data >/dev/null 2>/dev/null; then
    nginxid="www-data"
else
    if id nginx >/dev/null 2>/dev/null; then
        nginxid="nginx"
    else
        echo "Cannot determine a user to run the cgit service"
        exit 2
    fi
fi

cat <<EOF > $tempdir/amusewiki-cgit.service
[Unit]
Description=Amusewiki CGIT server
After=nss-user-lookup.target

[Service]
WorkingDirectory=$(pwd)
User=$nginxid
Group=$nginxid
ExecStart=$(which carton) exec plackup --path /git --port 9015 --host 127.0.0.1 -E deployment $(pwd)/psgi/amusewiki-cgit.psgi
Restart=always

[Install]
WantedBy=multi-user.target
EOF

cat <<EOF > $tempdir/amusewiki-jobber.service
[Unit]
Description=Amusewiki jobber
After=nss-user-lookup.target

[Service]
WorkingDirectory=$(pwd)
User=$(whoami)
Group=$(whoami)
Environment="PATH=$PATH"
ExecStart=$(which carton) exec perl -I$(pwd)/lib $(pwd)/script/amusewiki-jobber
Restart=always

[Install]
WantedBy=multi-user.target

EOF

cat <<EOF > $tempdir/amusewiki-web.service
[Unit]
Description=Amusewiki web server
After=nss-user-lookup.target

[Service]
WorkingDirectory=$(pwd)
User=$(whoami)
Group=$(whoami)
Environment="PATH=$PATH"
ExecStart=$(which carton) exec plackup -s FCGI --listen $(pwd)/var/amw.sock --nproc 5 -E deployment $(pwd)/psgi/amusewiki.psgi
Restart=always

[Install]
WantedBy=multi-user.target

EOF

cat <<EOF> $tempdir/amusewiki-nginx-reload.path
[Unit]
Description=Path to monitor to trigger an nginx reload

[Path]
PathChanged=$(pwd)/ssl/amusewiki_requests_webserver_reload.txt
EOF

cat <<EOF> $tempdir/amusewiki-nginx-reload.service
[Unit]
Description=Trigger an nginx reload
Wants=nginx.service

[Service]
ExecStart=/bin/sh -c '/usr/sbin/nginx -t && /usr/sbin/service nginx reload'
EOF



head -100 $tempdir/*
echo "############################################"
cat <<EOF
# The above systemd unit files are ready to be installed

# Please execute as root:

cd $tempdir
EOF

cat <<'EOF'
for i in amusewiki-*; do echo "installing $i"; cat $i > /etc/systemd/system/$i ; done;
systemctl daemon-reload
for i in amusewiki-*; do echo "activating $i"; systemctl start $i ; done
systemctl enable amusewiki-jobber amusewiki-web amusewiki-cgit
EOF

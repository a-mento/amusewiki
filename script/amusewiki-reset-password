#!/usr/bin/env perl

BEGIN { die "Do not run this as root" unless $>; }

use utf8;
use strict;
use warnings;
use lib 'lib';
use AmuseWikiFarm::Schema;
use Crypt::XkcdPassword;

=pod

=encoding utf8

=head1 NAME

amusewiki-reset-password - reset amusewiki passwords from the command line

=head1 SYNOPSIS

Usage: amusewiki-reset-password <username> [<password>]

Reset the password of an arbitrary user. The password is optional and
will be generated automatically if not provided.

You need to have dbic.yaml in the current directory, or in
~/.dbic.yaml with the C<amuse> stanza with the settings.

=cut

my $schema = AmuseWikiFarm::Schema->connect('amuse');

my ($username, $password) = @ARGV;
$password ||= Crypt::XkcdPassword->new(words => 'IT')->make_password(5, qr{\A[0-9a-zA-Z]{3,}\z});

die "Usage: $0 <username> [<password>]\n" unless $username && $password;

if (my $user = $schema->resultset('User')->find({ username => $username })) {
    $user->password($password);
    $user->update;
    print qq{Password for $username is now '$password'\n};
}
else {
    die "No such user $username!";
}



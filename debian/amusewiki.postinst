#!/bin/sh

set -e
amusewiki_dbc_include_file="/var/lib/amusewiki/dbinfo.conf"
dbc_generate_include="sh:$amusewiki_dbc_include_file"
dbc_generate_include_owner="amusewiki"
dbc_generate_include_perms="0600"
dbc_first_version="1.994"
dbc_mysql_createdb_encoding="utf8"
dbc_dbfile_owner="amusewiki"
dbc_dbfile_perms="0600"


. /usr/share/debconf/confmodule
. /usr/share/dbconfig-common/dpkg/postinst
dbc_go amusewiki $@


# setup the database
dbic_file=/var/lib/amusewiki/dbic.yaml

mkdir -p -m 700 /var/log/amusewiki
install_logfile="/var/log/amusewiki/installation.log"

send_mail_to_user=""

# if dbic file is missing, load generate it from the include file
if [ ! -f $dbic_file ]; then
    if [ -f "$amusewiki_dbc_include_file" ]; then
        (
            . $amusewiki_dbc_include_file
            case $dbtype in
                pgsql)
                    if [ -z "$dbport" ]; then
                        if lsof -i :5432 >/dev/null; then
                            dbport=5432
                        elif lsof -i :5433 >/dev/null; then
                            dbport=5433
                        else
                            echo "Nobody listening on 5432 or 5433! Is postgresql installed and running?"
                            exit 2;
                        fi
                    fi
                    cat <<EOF > $dbic_file

amuse:
  dsn: 'dbi:Pg:host=localhost;port=$dbport;database=$dbname'
  user: '$dbuser'
  password: '$dbpass'
  AutoCommit: 1
  RaiseError: 1
  quote_names: 1
EOF
                    ;;
                mysql)
                    cat <<EOF > $dbic_file
amuse:
  dsn: 'dbi:mysql:$dbname'
  user: '$dbuser'
  password: '$dbpass'
  AutoCommit: 1
  RaiseError: 1
  mysql_enable_utf8: 1
  quote_names: 1
EOF
                    ;;
                sqlite3)
                    cat <<EOF > $dbic_file
amuse:
  dsn: 'dbi:SQLite:$basepath/$dbname'
  user: ''
  password: ''
  on_connect_do: 'PRAGMA foreign_keys = ON'
  AutoCommit: 1
  RaiseError: 1
  sqlite_unicode: 1
  quote_names: 1
EOF
                    ;;
                *)
                    echo "Unsupported dbtype $dbtype"
                    exit 2
                    ;;
            esac
        )
    fi

    if [ ! -f $dbic_file ]; then
        cp /usr/share/doc/amusewiki/dbic.yaml.sqlite.example $dbic_file;
    fi
    chown amusewiki:amusewiki $dbic_file;
    chmod 600 $dbic_file;
    amusewiki create-doc-site | tee $install_logfile
    send_mail_to_user="1"
fi

amusewiki populate-webfonts

amusewiki upgrade-lexicon /var/lib/amusewiki/repo/*

# install the log4perl file, if missing
if [ ! -f "/var/lib/amusewiki/log4perl.conf" ]; then
    cat <<'EOF' > /var/lib/amusewiki/log4perl.conf
# This is a stock file, but it's yours for modifying (even if the
# defaults are sane). You can also create a file
# log4perl.local.conf in this directory and the application will use
# that one.

log4perl.logger=INFO, Log, Mail

log4perl.appender.Log=Log::Dispatch::FileRotate
log4perl.appender.Log.filename=log/amw.log
log4perl.appender.Log.mode=append

# 10M then rotate, max 10, 100M of logs
log4perl.appender.Log.size=10485760
log4perl.appender.Log.max=10

log4perl.appender.Log.layout=Log::Log4perl::Layout::PatternLayout
log4perl.appender.Log.layout.ConversionPattern=%d %p - %c - %F:%L - %m%n

# send the errors to root.

log4perl.appender.Mail=Log::Dispatch::Email::MailSend
log4perl.appender.Mail.Threshold=ERROR
log4perl.appender.Mail.from=amusewiki@localhost
log4perl.appender.Mail.to=root@localhost
log4perl.appender.Mail.subject="[AmuseWiki errors: localhost]"
log4perl.appender.Mail.buffered=0
log4perl.appender.Mail.layout=Log::Log4perl::Layout::PatternLayout
log4perl.appender.Mail.layout.ConversionPattern=%d %p - %c - %F:%L - %m%n

EOF
    chown amusewiki:amusewiki /var/lib/amusewiki/log4perl.conf
fi

# remove the site cache

su -c "rm -rfv /var/lib/amusewiki/var/cache" amusewiki

# upgrade the db, if needed
amusewiki upgrade-db
amusewiki generate-nginx-conf | tee -a /var/log/amusewiki/installation.log

if [ -n "$send_mail_to_user" ]; then
    cat $install_logfile | mail -s "AmuseWiki installation" root@localhost
fi

#DEBHELPER#

if [ -f /var/lib/amusewiki/amw.tmp.pid ]; then
    killpid=`cat /var/lib/amusewiki/amw.tmp.pid`
    echo "Backup amusewiki $killpid found, waiting 30 seconds then shutting it down"
    # kill as amusewiki to avoid killing random processes as root with stale files etc.
    sleep 30
    su -c "kill $killpid" amusewiki
    echo "Waiting $killpid to terminate"
    sleep 2
    if kill -0 $killpid 2>/dev/null; then
        echo "WARNING: PROCESS $killpid still alive!";
    fi
    if [ -f /var/lib/amusewiki/amw.tmp.pid ]; then
        rm -vf /var/lib/amusewiki/amw.tmp.pid
    fi
fi

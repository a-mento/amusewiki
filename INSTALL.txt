Prerequisites:

 - a database (mysql, pg, sqlite)
 - a working perl (i.e., you can install modules)
 - fontconfig (install it before installing texlive)
 - graphicsmagick (for thumbnails) and imagemagick (for preview generation)
 - TeXlive (minimum: texlive 2012)
 - a mime-info database: shared-mime-info on debian

Unpack the sources and change directory into them.

Install Catalyst

 cpanm Module::Install::Catalyst

Execute "perl Makefile.PL" and install the dependencies if it complains.

Execute make


Answer yes to install the modules with cpan. Also, depending on the
database you are going to use, you need the relevant driver, like
lidbd-pg-perl for debian (or install it from CPAN).

Create a database for the application. E.g., for mysql:

  mysql> create database amuse DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
  
  mysql> grant all privileges on amuse.* to amuse@localhost identified by XXX

Or, for postgres:

Login as root.

 su - postgres
 psql
 create user amuse with password 'XXXX';
 create database amuse owner amuse;

Copy dbic.yaml.<dbtype>.example to dbic.yaml and adjust the
credentials, and chmod it to 600.

Install TeXlive.

https://www.tug.org/texlive/acquire-netinstall.html

This is a sample configuration of the installer:

 <1> TEXDIR:       /home/amuse/texlive/2014
     support tree: /home/amuse/texlive/2014/texmf-dist

 <2> TEXMFLOCAL:     /home/amuse/texlive/texmf-local
 <3> TEXMFSYSVAR:    /home/amuse/texlive/2014/texmf-var
 <4> TEXMFSYSCONFIG: /home/amuse/texlive/2014/texmf-config

 <5> TEXMFVAR:       ~/.texlive2014/texmf-var
 <6> TEXMFCONFIG:    ~/.texlive2014/texmf-config
 <7> TEXMFHOME:      ~/texmf


 Add /home/amuse/texlive/2014/texmf-dist/doc/info to INFOPATH.
 Add /home/amuse/texlive/2014/texmf-dist/doc/man to MANPATH
   (if not dynamically found).

 Most importantly, add /home/amuse/texlive/2014/bin/x86_64-linux
 to your PATH for current and future sessions.

The needed fonts are shipped in texlive, under texmf-dist/fonts/, so
it's usually enough to symlink them into ~/.fonts.

Fonts needed: antt  cm-unicode  libertine  paratype  poltawski  tex-gyre iwona droids

The SIL charis font is not shipped by texlive, but it's usually
packaged by your distro. Or download it at
http://www.sil.org/resources/software_fonts/charis-sil

Put the fonts into ~/.fonts and execute fc-cache. (You can find more detailed instructions in BUILD-SERVER.txt).

To test if everything is working as expected, go to ./font-preview and
run ./gen.sh

Disregard the copious output of missing characters, this is fine (as
we use this to test them).

For the EPUB to have the font bundling, you need to populate the
webfonts subdirectories with the fonts.

Go into the webfonts directory and run ./populate-webfonts.pl from
there.

CKEditor is not shipped with amusewiki. By default it will use the
CDN. If you prefer to use a local copy you can install it as follows.

In ./root/static/js download and unpack ckeditor:

e.g. 

cd root/static/js/
wget http://download.cksource.com/CKEditor/CKEditor/CKEditor%204.4.3/ckeditor_4.4.3_standard.zip
unzip ckeditor_4.4.3_standard.zip

If you use logos in your pdfs, put them under in texmf (e.g
$HOME/texmf/tex/generic/amusewiki/data) and run mktexlsr)

Assuming your logo is named logo-yu.pdf, check if latex can find it
with:

  kpsewhich logo-yu.pdf

Run the install script, which will take care of creating an initial
site and root account. Once you login, you will be able to create
librarian users and sites.

 ./script/install.pl

If you run under nginx, run:

 ./script/generate-nginx-conf.pl

This will generate a suitable nginx configuration and print the (copy
and paste) installation instructions.

If nginx complains about missing certificates, executes:

 ./script/generate-ssl-certs.pl

and copy them to the target destination as per instructions.

I usually do some nginx tweaks:

In the http { } stanza in nginx.conf:

client_max_body_size 8m;
log_format hitcount '$server_name $host [$time_local] "$request" $status - $bytes_sent "$http_referer" "$http_user_agent"';
access_log hitcount;

And in the type { } stanza in mime.types I add:

  application/epub+zip  epub;

And tweak the text/plain defintion adding "muse"

   text/plain	txt muse;

Once webserver is configured, you can start the application.

  ./init-all start

Login as the root account, configure your site, then you can bootstrap
it.

 ./script/bootstrap_archive.pl

If you get this error:

 Can't call method "getPageDimensions" on an undefined value at /...

run the script script/patch-cam-pdf.sh


OPTIONAL SETUP

Make the repositories read-only available via git-daemon.

  apt-get install git-daemon-sysvinit

Change /etc/default/git-daemon to read:

  GIT_DAEMON_ENABLE=true

Start the service

  service git-daemon start

Link the repositories in /var/cache/git (as per package documentation.
Note that in debian jessie it was moved to /var/lib/cache).

Something like this should do:

root@localhost:/var/cache/git# for i in ~amuse/amusewiki/repo/*; \
     do if [ -d "$i/.git" ]; then echo $(basename $i); \
     ln -s $i/.git $(basename $i).git ; fi ; done

And in your repo directory, mark the repository for export:

amuse@localhost:~/amusewiki/repo$ for i in */.git ; do touch $i/git-daemon-export-ok; done

If you want a "recent change" page, you need to setup cgit and then
set the checkbox on the "Recent changes" in the site configuration
panel.

Install fcgiwrap:

  apt-get install fcgiwrap

Execute:

  ./script/install-cgit.pl

If it fails probably means you're missing dependencies (notably,
libssl-dev).

And then refresh the nginx setup with

   ./script/generate-nginx-conf.pl

If you already have the repository exported in /var/cache/git/, you
should be good.

Later, the configuration for cgit can be refreshed with:

  ./script/install-cgit.pl --reconfigure --gitpath /var/cache/git/ \
    --hostname amusewiki.org

